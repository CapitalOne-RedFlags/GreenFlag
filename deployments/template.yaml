AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: Consumer stack for event-driven transactions, referencing an existing SQS queue.

Globals:
  Function:
    Runtime: provided.al2
    MemorySize: 128
    Timeout: 10
    Architectures:
      - x86_64

Parameters:
  TransactionQueueARN:
    Type: String
    Description: ARN of the SQS queue holding transaction messages

  TransactionDLQARN:
    Type: String
    Description: ARN of the SQS dead letter queue holding transaction messages

  DynamoDBTableName:
    Type: String
    Description: Name of the DynamoDB table
    Default: Transactions

  DynamoDBEndpoint:
    Type: String
    Description: DynamoDB endpoint (e.g., http://localhost:8000 for local tests)
    Default: https://dynamodb.us-east-1.amazonaws.com

  AWSRegion:
    Type: String
    Description: AWS region where resources should be deployed
    Default: us-east-1

  QueueUrl:
    Type: String
    Description: URL of the SQS queue
    Default: https://sqs.us-east-1.amazonaws.com/140023383737/Bank_Transactions

Resources:
  ########################################
  # (1) DynamoDB Table
  ########################################
  TransactionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoDBTableName
      AttributeDefinitions:
        - AttributeName: AccountID
          AttributeType: S
        - AttributeName: TransactionID
          AttributeType: S
      KeySchema:
        - AttributeName: AccountID
          KeyType: HASH
        - AttributeName: TransactionID
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  ########################################
  # (2) SNS Topic for Fraud Alerts
  ########################################
  NotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: FraudAlerts

  ########################################
  # (3) TransactionPipelineFunction
  ########################################
  TransactionPipelineFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TransactionPipelineFunction
      CodeUri: ../
      Handler: bootstrap
      Runtime: provided.al2
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref DynamoDBTableName
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:GetItem
                - dynamodb:DescribeTable
              Resource: !GetAtt TransactionsTable.Arn
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource: !Ref TransactionQueueARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !Ref TransactionQueueARN
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 5
            FunctionResponseTypes:
              - ReportBatchItemFailures
    Metadata:
      BuildMethod: makefile

  ########################################
  # (4) FraudPipelineFunction
  ########################################
  FraudPipelineFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: FraudPipelineFunction
      CodeUri: ../
      Handler: bootstrap
      Runtime: provided.al2
      Environment:
        Variables:
          FRAUD_DLQ_URL: !GetAtt FraudDLQ.Url
      
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - sns:CreateTopic
                - sns:Subscribe
                - sns:Publish
                - sqs:SendMessage
              Resource:
                - !Ref NotificationTopic
                - !GetAtt FraudDLQ.Arn 
      Events:
        DynamoDBStream:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt TransactionsTable.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 5
            FunctionResponseTypes:
              - ReportBatchItemFailures
      DeadLetterQueue:
        Type: SQS
        TargetArn: !Ref TransactionDLQARN
    Metadata:
      BuildMethod: makefile

  ########################################
  # (5) Fraud Pipeline Dead Letter Queue
  ########################################
  FraudDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: FraudDLQ

  ########################################
  # (6) Response Pipeline Dead Letter Queue
  ########################################
  ResponseDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: ResponseDLQ

  ########################################
  # (7) TransactionPipelineRetryFunction
  ########################################
  TransactionPipelineRetryFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: TransactionPipelineRetryFunction
      CodeUri: ../
      Handler: bootstrap
      Runtime: provided.al2
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref DynamoDBTableName
          IS_RETRY: true
      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:GetItem
                - dynamodb:DescribeTable
              Resource: !GetAtt TransactionsTable.Arn
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:GetQueueAttributes
              Resource: !Ref TransactionDLQARN
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !Ref TransactionDLQARN
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 5
            FunctionResponseTypes:
              - ReportBatchItemFailures
    Metadata:
      BuildMethod: makefile

  ########################################
  # (4) FraudPipelineRetryFunction
  ########################################
  FraudPipelineRetryFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: FraudPipelineRetryFunction
      CodeUri: ../
      Handler: bootstrap
      Runtime: provided.al2
      Environment:
        Variables:
          IS_RETRY: true

      Policies:
        - AWSLambdaBasicExecutionRole
        - Statement:
            - Effect: Allow
              Action:
                - sns:CreateTopic
                - sns:Subscribe
                - sns:Publish
                - sqs:SendMessage
              Resource:
                - !Ref NotificationTopic
                - !GetAtt FraudDLQ.Arn 
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt FraudDLQ.Arn
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 5
    Metadata:
      BuildMethod: makefile

Outputs:
  DynamoDBTableNameOut:
    Description: "Name of the DynamoDB table"
    Value: !Ref TransactionsTable

  NotificationTopicArn:
    Description: "ARN of the SNS topic"
    Value: !Ref NotificationTopic

  TransactionPipelineArn:
    Description: "ARN of the TransactionPipelineFunction"
    Value: !GetAtt TransactionPipelineFunction.Arn

  FraudPipelineArn:
    Description: "ARN of the FraudPipelineFunction"
    Value: !GetAtt FraudPipelineFunction.Arn

  TransactionRetryArn:
    Description: "ARN of the TransactionPipelineRetryFunction"
    Value: !GetAtt TransactionPipelineRetryeFunction.Arn

  FraudRetryArn:
    Description: "ARN of the FraudPipelineRetryFunction"
    Value: !GetAtt FraudPipelineRetryFunction.Arn